/**
*============================================================================
*  Copyright The Ohio State University Research Foundation, The University of Chicago - 
*	Argonne National Laboratory, Emory University, SemanticBits LLC, and 
*	Ekagra Software Technologies Ltd.
*
*  Distributed under the OSI-approved BSD 3-Clause License.
*  See http://ncip.github.com/cagrid-core/LICENSE.txt for details.
*============================================================================
**/
package gov.nih.nci.cagrid.data.transfer.service.globus;

import gov.nih.nci.cagrid.data.service.DataServiceInitializationException;
import gov.nih.nci.cagrid.data.transfer.service.Cql2TransferDataServiceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the TransferDataServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correctly mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.0
 * 
 */
public class Cql2TransferDataServiceProviderImpl{
	
	Cql2TransferDataServiceImpl impl;
	
	public Cql2TransferDataServiceProviderImpl() throws DataServiceInitializationException {
		impl = new Cql2TransferDataServiceImpl();
	}
	

	public org.cagrid.dataservice.transfer.stubs.ExecuteTransferQueryResponse executeTransferQuery(
	    org.cagrid.dataservice.transfer.stubs.ExecuteTransferQueryRequest params) 
            throws RemoteException, gov.nih.nci.cagrid.data.faults.MalformedQueryExceptionType, 
            gov.nih.nci.cagrid.data.faults.QueryProcessingExceptionType {
		Cql2TransferDataServiceAuthorization.authorizeExecuteTransferQuery();
		org.cagrid.dataservice.transfer.stubs.ExecuteTransferQueryResponse boxedResult = 
		    new org.cagrid.dataservice.transfer.stubs.ExecuteTransferQueryResponse();
		boxedResult.setTransferServiceContextReference(impl.executeTransferQuery(params.getCqlQuery().getCQLQuery()));
		return boxedResult;
	}
}
